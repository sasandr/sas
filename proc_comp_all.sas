/**SOH***********************************************************************************
Study #:                        Utility
Program Name:                   comp_tab.sas
Purpose:                        
Original Author:                Chelsea Chen
Date Initiated:                 16-May-2019
Responsibility Taken Over by:   
Date Last Modified:             
Reason for Modification:  
Input data:                                                     
Output data:            
External macro referenced:      
SAS Version:                    V9.4
Program Version #:              1.0
**EOH***********************************************************************************/
%let pgm=%sysfunc(prxchange(s/.sas *$//i,1,%sysfunc(scan(%sysfunc(getoption(SYSIN)),-1,/))));

options nodate ps=45 center ls=134;

libname prod1 "/data/prod/client04/pt010006/final/output/qcdata" access=readonly;
libname prod2 "/data/prod/client04/pt010006/final2/output/qcdata" access=readonly;

%macro comp2(dom);
  
	proc compare data=prod2.&dom compare=prod1.&dom criterion=1E-5 METHOD=absolute;
	run;
	
  %let CompareSysinfo=&sysinfo;

  data valid;
    length item $40;
    sysinfo=&CompareSysinfo.;
    item=%upcase("&dom.");
  run;

  proc append base=all data=valid;
  run;
	
	footnote1 "Report generated by program: /data/prod/client04/pt010006/final2/output/&pgm..sas";
%mend comp2;

%macro getcompmsg;
  
  data all_msg;
    set all;
    attrib msg length=$60;
    
    if sysinfo='1'b then do;
      msg = 'Data set labels differ';
      output;
    end;
    
    if sysinfo='1.'b then do;
      msg = 'Data set types differ';
      output;
    end;
    
    if sysinfo='1..'b then do;
      msg = 'Variable has different informat';
      output;
    end;
    
    if sysinfo='1...'b then do;
      msg = 'Variable has different format';
      output;
    end;
    
    if sysinfo='1....'b then do;
      msg = 'Variable has different length';
      output;
    end;
    
    if sysinfo='1.....'b then do;
      msg = 'Variable has different label';
      output;
    end;
    
    if sysinfo='1......'b then do;
      msg = 'Base data set has observation not in comparison';
      output;
    end;
    
    if sysinfo='1.......'b then do;
      msg = 'Comparison data set has observation not in base';
      output;
    end;
    
    if sysinfo='1........'b then do;
      msg = 'Base data set has BY group not in comparison';
      output;
    end;
    
    if sysinfo='1.........'b then do;
      msg = 'Comparison data set has BY group not in base';
      output;
    end;
    
    if sysinfo='1..........'b then do;
      msg = 'Base data set has variable not in comparison';
      output;
    end;
    
    if sysinfo='1...........'b then do;
      msg = 'Comparison data set has variable not in base';
      output;
    end;
    
    if sysinfo='1............'b then do;
      msg = 'A value comparison was unequal';
      output;
    end;
    
    if sysinfo='1.............'b then do;
      msg = 'Conflicting variable types';
      output;
    end;
    
    if sysinfo='1..............'b then do;
      msg = 'BY variables do not match';
      output;
    end;
    
    if sysinfo='1...............'b then do;
      msg = 'Fatal error: comparison not done';
      output;
    end;
    
    if sysinfo=0 then do;
      msg = 'The two data sets compared are exactly equal';
      output;
    end;
  run;
  
  proc sort data=all_msg;
    by sysinfo item;
  run;

  title2 "Summary of PROC COMPARE";
  
  proc report data=all_msg headline nowd split='*' missing spacing=1;
    column sysinfo item msg;
  
    define sysinfo / order order=internal noprint;
    define item /order width = 20 "Dataset Name" flow;
    define msg /display width = 100 "PROC COMPARE Result";
  
    break after sysinfo/skip;
  run;
  
  proc datasets library=work mtype=data nodetails nolist;
    delete all_msg all;
  quit;
  
%mend getcompmsg;

data der01;
  set sashelp.vtable;
  where libname in ("PROD1" "PROD2") and memtype='DATA' and nobs>0;
  flag=1;
  keep libname memname flag;
run;

proc sort data=der01;
  by memname;
run;

proc transpose data=der01 out=der02;
  by memname;
  var flag;
  id  libname;
run;

data der03;
  set der02;
  
  where nmiss(prod1, prod2)=0;
  
  if find(memname, 'T')=1 then type=1;
  else if find(memname, 'G')=1 then type=2;
  else if find(memname, 'L')=1 then type=3;
run;

options pageno=1;
proc printto print='01_proc_compare_tables.txt' new;
run;

title1 "Comparison of source data for all tables";
title2 "Base: PROD#2  Comp: PROD#1";
	
data _null_;
  set der03 end=eof;
  where type=1;
  call execute('%nrstr(%comp2(' || strip(memname) || '))');
  
  if eof then do;
    call execute('%nrstr(%getcompmsg)');
  end;
run; endsas;


options pageno=1;
proc printto print='02_proc_compare_graphs.txt' new;
run;

title1 "Comparison of source data for all graphs";
title2 "Base: PROD#2  Comp: PROD#1";
	
data _null_;
  set der03;
  where type=2;
  call execute('%nrstr(%comp2(' || strip(memname) || '))');
run;

%getcompmsg;

options pageno=1;
proc printto print='03_proc_compare_listings.txt' new;
run;

title1 "Comparison of source data for all listings";
title2 "Base: PROD#2  Comp: PROD#1";
	
data _null_;
  set der03;
  where type=3;
  call execute('%nrstr(%comp2(' || strip(memname) || '))');
run;

%getcompmsg;

proc printto; run;


